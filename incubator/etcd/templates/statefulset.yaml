{{- $etcdPeerProtocol := include "etcd.peerProtocol" . }}
{{- $etcdClientProtocol := include "etcd.clientProtocol" . }}
{{- $etcdAuthOptions := include "etcd.authOptions" . }}
{{- if .Capabilities.APIVersions.Has "apps/v1" }}
apiVersion: apps/v1
{{- else }}
apiVersion: apps/v1beta2
{{- end }}
kind: StatefulSet
metadata:
  name: {{ template "etcd.fullname" . }}
  labels:
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    app: {{ template "etcd.name" . }}
    app.kubernetes.io/name: {{ template "etcd.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  selector:
    matchLabels:
      app: {{ template "etcd.name" . }}
  serviceName: {{ template "etcd.fullname" . }}
  replicas: {{ .Values.replicas }}
  template:
    metadata:
      name: {{ template "etcd.fullname" . }}
{{- if .Values.annotations }}
      annotations:
{{ toYaml .Values.annotations | indent 8 }}
{{- end }}
      labels:
        heritage: {{ .Release.Service | quote }}
        release: {{ .Release.Name | quote }}
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        app: {{ template "etcd.name" . }}
    spec:
{{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
{{- end }}
{{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
{{- end }}
{{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
{{- end }}
      terminationGracePeriodSeconds: 30
      containers:
      - name: {{ template "etcd.fullname" . }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: "{{ .Values.image.pullPolicy }}"
        ports:
        - containerPort: {{ .Values.peerPort }}
          name: peer
        - containerPort: {{ .Values.clientPort }}
          name: client
{{- if .Values.tolerations }}
        resources:
{{ toYaml .Values.resources | indent 10}}
{{- end }}
        env:
        - name: ETCDCTL_API
          value: "3"
        - name: SET_NAME
          value: "{{ template "etcd.fullname" . }}"
        - name: KEEP_EXISTING_DATA
          value: "{{ .Values.keepExistingData }}"
        - name: ETCD_LOGGER
          value: "{{ .Values.logger }}"
        - name: ETCD_LOG_LEVEL
          value: "{{ .Values.logLevel }}"
        - name: ETCD_DEBUG
          value: "{{ .Values.debugMode }}"
        - name: ETCD_METRICS
          value: "{{ .Values.metrics }}"
        {{- if and .Values.auth.peer.secureTransport .Values.auth.peer.useAutoTLS }}
        - name: ETCD_PEER_AUTO_TLS
          value: "true"
        {{- end }}
        {{- if .Values.auth.client.secureTransport }}
        - name: ETCD_CERT_FILE
          value: "/opt/etcd/certs/client/cert.pem"
        - name: ETCD_KEY_FILE
          value: "/opt/etcd/certs/client/key.pem"
        {{- if .Values.auth.client.enableAuthentication }}
        - name: ETCD_CLIENT_CERT_AUTH
          value: "true"
        - name: ETCD_TRUSTED_CA_FILE
          value: "/opt/etcd/certs/client/ca.crt"
        {{- end }}
        {{- end }}
{{- if .Values.extraEnv }}
{{ toYaml .Values.extraEnv | indent 8 }}
{{- end }}
        volumeMounts:
        - name: configmap
          mountPath: /usr/bin/k8stools
          subPath: k8stools
        - name: datadir
          mountPath: /var/run/etcd
        {{- if or .Values.auth.client.enableAuthentication (and .Values.auth.client.secureTransport ) }}
        - name: etcd-client-certs
          mountPath: /opt/etcd/certs/client/
          readOnly: true
        {{- end }}
        lifecycle:
          preStop:
            exec:
              command:
                - k8stools
                - stop
        command:
          - k8stools
          - start
      volumes:
      {{- if or .Values.auth.client.enableAuthentication (and .Values.auth.client.secureTransport ) }}
      - name: etcd-client-certs
        secret:
          secretName: {{ required "A secret containinig the client certificates is required" .Values.auth.client.existingSecret }}
          defaultMode: 256
      {{- end }}
      - name: configmap
        configMap:
          name: {{ template "etcd.fullname" . }}
          items:
            - key: k8stools
              path: k8stools
              mode: 0755
  {{- if .Values.persistentVolume.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: datadir
    spec:
      accessModes:
        - "ReadWriteOnce"
      resources:
        requests:
          storage: "{{ .Values.persistentVolume.storage }}"
    {{- if .Values.persistentVolume.storageClass }}
    {{- if (eq "-" .Values.persistentVolume.storageClass) }}
      storageClassName: ""
    {{- else }}
      storageClassName: "{{ .Values.persistentVolume.storageClass }}"
    {{- end }}
    {{- end }}
  {{- else }}
      - name: datadir
      {{- if .Values.memoryMode }}
        emptyDir:
          medium: Memory
      {{- else }}
        emptyDir: {}
      {{- end }}
  {{- end }}
