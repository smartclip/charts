# nameOverride:
# fullnameOverride:

image:
  repository: "quay.io/coreos/etcd"
  tag: "v3.4.10"
  pullPolicy: "IfNotPresent"

## must not be less than 3. A etcd cluster works only if there are at least 3 nodes. This is then the initial cluster of voters.
replicas: 3

resources: {}
# limits:
#  cpu: 100m
#  memory: 128Mi
# requests:
#  cpu: 100m
#  memory: 128Mi

# Authentication parameters
##
auth:
  client:
    ## Switch to encrypt client communication using TLS certificates
    secureTransport: false
    ## Switch to enable host authentication using TLS certificates. Requires existing secret.
    enableAuthentication: false
    ## Name of the existing secret containing cert files for peer communication.
    # existingSecret:

  peer:
    ## Switch to encrypt peer communication using TLS certificates
    secureTransport: false
    ## Switch to automatically create the TLS certificates
    useAutoTLS: false
    ## Switch to enable host authentication using TLS certificates. Requires existing secret.
    enableAuthentication: false

persistentVolume:
  enabled: false
  # storage: "1Gi"
  ## etcd data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"

## Keeps data on disk on node shutdown if persistentVolume is enabled. useful if after a node restart you want rather to continue with existing data from disk than a full sync from cluster.
keepExistingData: false

## This is only available when persistentVolume is false:
## If persistentVolume is not enabled, one can choose to use memory mode for ETCD by setting memoryMode to "true".
## The system will create a volume with "medium: Memory"
memoryMode: false

## Specify ‘zap’ for structured logging or ‘capnslog’.
## WARNING: --logger=capnslog to be deprecated in v3.5.
logger: zap

## Configures log level. Only supports debug, info, warn, error, panic, or fatal.
logLevel: info

## Drop the default log level to DEBUG for all subpackages.
## default: false (INFO for all packages)
debugMode: false

## Set level of detail for exported metrics, specify ‘extensive’ to include server side grpc histogram metrics.
## default: basic
metrics: basic

## Node labels and tolerations for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#taints-and-tolerations-beta-feature
annotations: {}
nodeSelector: {}
tolerations: []
affinity: {}
extraEnv: []

service:
  annotations: {}
    # prometheus.io/scrape: 'true'
    # prometheus.io/path: '/metrics'
    # prometheus.io/port: '2379'

## do not change unless you knwo what you are doing
peerPort: 2380
clientPort: 2379
